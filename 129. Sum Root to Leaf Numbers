/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int sumNumbers(TreeNode root) {
        List<StringBuilder> list = new ArrayList<>();
        dfs(root, list,new StringBuilder());
        int ans = 0;
        for(StringBuilder sb : list){
            ans+=Integer.valueOf(sb.toString());
        }
        return ans;
    }

    void dfs(TreeNode root , List<StringBuilder> list, StringBuilder sb){

        if(root == null){
            return ;
        }

        sb.append(String.valueOf(root.val));

        if(root.left ==null && root.right == null){
            list.add(new StringBuilder(sb));
        }
        dfs(root.left, list, sb);
        dfs(root.right, list, sb);
        sb.deleteCharAt(sb.length()-1);

    }
}
