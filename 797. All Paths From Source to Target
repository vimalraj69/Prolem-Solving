class Solution {
	public List<List<Integer>> allPathsSourceTarget(int[][] graph) {
		List<List<Integer>> res = new ArrayList<>();

		
			List<Integer> l = new ArrayList<>();
//			l.add(0);
			allPath(graph, res, l, 0);
		

		return res;
	}

	void allPath(int arr[][], List<List<Integer>> res, List<Integer> l, int current ) {
        
		if ((l.contains(arr.length-1) || current == arr.length-1 )&& arr[current].length == 0) {
            if(!l.contains(arr.length-1)){
			l.add(current);
            }
			res.add(new ArrayList<>(l));
			return;
		}

		l.add(current);
		for(int i =0; i<arr[current].length ; i++) {
			allPath(arr, res , l , arr[current][i]);
			l.remove(l.size()-1);
		}

	}
}
