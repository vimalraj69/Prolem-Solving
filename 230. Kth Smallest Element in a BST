/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int kthSmallest(TreeNode root, int k) {

        if(root == null){
            return 0;
        }
        List<Integer> l =new ArrayList<>();
        dfs(root, l);
        Collections.sort(l);

        if(k<= l.size()){
            return l.get(k-1);
        }

        return l.get(l.size()-1);
    }
    void dfs (TreeNode root , List<Integer> l){
        if(root ==null){
            return ;
        }
        l.add(root.val);
        dfs(root.left, l);
        dfs(root.right , l);
    } 
}
