/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int getMinimumDifference(TreeNode root) {
        List<Integer> l=new ArrayList<>();
       transverse(root , l); 
       int min=Integer.MAX_VALUE;
       for(int i=0;i<l.size();i++){
           for(int j=i+1;j<l.size();j++){
               min=Math.min(min,Math.abs(l.get(i)-l.get(j)));
           }
       }
       return min;
    }
    public void transverse(TreeNode node,List<Integer> l){
        if(node == null){
            return;
        }
        transverse(node.left,l);
        l.add(node.val);
        transverse(node.right,l);
    }

}
