/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int findSecondMinimumValue(TreeNode root) {
        List<Integer> l=new ArrayList<>();
        transverse(root , l);
        Collections.sort(l);
        if(l.size()>1){
            if(l.get(0)<l.get(1)){
                return l.get(1);
            }     
            }
            return -1;
        }

    
     public void transverse(TreeNode node,List<Integer> l){
        if(node == null){
            return;
        }
        transverse(node.left,l);
        if(!l.contains(node.val)){
            l.add(node.val);
        }
        
        transverse(node.right,l);
    }
}
