/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeInBetween(ListNode list1, int a, int b, ListNode list2) {
        List<Integer> l=new ArrayList<>();
        while(list1 != null){
            l.add(list1.val);
            list1=list1.next;
        }
        List<Integer> fl=new ArrayList<>();
        boolean f=true;
       
        for(int i=0;i<l.size();i++){
           
            if(a!=i && f){
                fl.add(l.get(i));
                
            }else{
                f=false;
                while(list2!=null){
                    fl.add(list2.val);
                    list2=list2.next;
                }
            }
             if(b==i){
                f=true;
            }
        }

        ListNode ans=new ListNode();
        ListNode temp=ans;
        int i=0;
        while(i<fl.size()){
            ans.val=fl.get(i);
            if(i!=fl.size()-1){
            ans.next= new ListNode();
            ans=ans.next;
            }
            i++;
        }
        return temp;
    }
}
