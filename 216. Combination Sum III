class Solution {
    public List<List<Integer>> combinationSum3(int k, int n) {
        // int arr[] = {1,2,3,4,5,6,7,8,9};
        List<List<Integer>> l = new ArrayList<>();
        List<Integer> sub = new ArrayList<>();
        
        
            com(1,k, l, sub,n,0);
        
        return l;
    }
    void com(int start ,int k , List<List<Integer>> l, List<Integer> sub,int n, int sum){

        if(start >10){
            return;
        }
        if(sub.size()==k ){
            if( sum==n && !l.contains(sub)){
            l.add(new ArrayList(sub));
            }
            return;
        }
        sub.add(start);
        sum+=start;
        com(start+1, k, l, sub, n,sum);
        sub.remove(sub.size()-1);
        sum-=start;
        com(start+1, k, l, sub,n, sum);
        
    }
}
